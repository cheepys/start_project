{"version":3,"sources":["..\\..\\..\\..\\assets\\Scripts/assets\\Scripts\\Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","url","AudioClip","onLoad","groundY","y","height","spawnNewStar","score","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","randX","randY","random0To1","jumpHeight","maxX","width","randomMinus1To1","p","gainScore","string","toString","audioEngine","playEffect"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;AAMR;AACAC,yBAAiB,CAPT;AAQRC,yBAAiB,CART;AASR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAVA;AAcR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAfA;;AAoBRE,sBAAc;AACVR,qBAAS,IADC;AAEVC,kBAAMP,GAAGe;AAFC,SApBN;;AAyBR;AACAC,oBAAY;AACRV,qBAAS,IADD;AAERW,iBAAKjB,GAAGkB;AAFA;AA1BJ,KAHP;;AAmCLC,YAAQ,kBAAY;AAChB;AACA,aAAKC,OAAL,GAAe,KAAKT,MAAL,CAAYU,CAAZ,GAAgB,KAAKV,MAAL,CAAYW,MAAZ,GAAmB,CAAlD,CAFgB,CAEuC;AACvD;AACA,aAAKC,YAAL;AACA,aAAKC,KAAL,GAAa,CAAb;AACH,KAzCI;;AA2CLD,kBAAc,wBAAW;AACrB;AACA,YAAIE,UAAUzB,GAAG0B,WAAH,CAAe,KAAKrB,UAApB,CAAd;AACA;AACA,aAAKsB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACH,KAnDI;;AAqDLF,wBAAoB,8BAAY;AAC5B,YAAIG,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKd,OAAL,GAAepB,GAAGmC,UAAH,KAAkB,KAAKtB,MAAL,CAAYkB,YAAZ,CAAyB,QAAzB,EAAmCK,UAApE,GAAiF,EAA7F;AACA;AACA,YAAIC,OAAO,KAAKV,IAAL,CAAUW,KAAV,GAAgB,CAA3B;AACAL,gBAAQjC,GAAGuC,eAAH,KAAuBF,IAA/B;AACA;AACA,eAAOrC,GAAGwC,CAAH,CAAKP,KAAL,EAAYC,KAAZ,CAAP;AACH,KA9DI;;AAgERO,eAAW,qBAAY;AAChB,aAAKjB,KAAL,IAAc,CAAd;AACA;AACA,aAAKV,YAAL,CAAkB4B,MAAlB,GAA2B,YAAY,KAAKlB,KAAL,CAAWmB,QAAX,EAAvC;AACA;AACA3C,WAAG4C,WAAH,CAAeC,UAAf,CAA0B,KAAK7B,UAA/B,EAA2C,KAA3C;AACH;;AAED;;;AAxEK,CAAT","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // this property quotes the PreFab resource of stars\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        // the random scale of disappearing time for stars\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // ground node for confirming the height of the generated star's position\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player node for obtaining the jump height of the main character and controlling the movement switch of the main character\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\t\t\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n\r\n        // scoring sound effect resource\r\n        scoreAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        }\t\t\r\n    },\r\n\r\n    onLoad: function () {\r\n        // obtain the anchor point of ground level on the y axis\r\n        this.groundY = this.ground.y + this.ground.height/2;   // this.ground.top may also work\r\n        // generate a new star\r\n        this.spawnNewStar();\r\n        this.score = 0;\t\t\t\r\n    },\r\n\r\n    spawnNewStar: function() {\r\n        // generate a new node in the scene with a preset template\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // put the newly added node under the Canvas node\r\n        this.node.addChild(newStar);\r\n        // set up a random position for the star\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        newStar.getComponent('Star').game = this;\t\t\r\n    },\r\n\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // According to the position of the ground level and the main character's jump height, randomly obtain an anchor point of the star on the y axis\r\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // according to the width of the screen, randomly obtain an anchor point of star on the x axis\r\n        var maxX = this.node.width/2;\r\n        randX = cc.randomMinus1To1() * maxX;\r\n        // return to the anchor point of the star\r\n        return cc.p(randX, randY);\r\n    },\r\n\r\n\tgainScore: function () {\r\n        this.score += 1;\r\n        // update the words of the scoreDisplay Label\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n        // play the scoring sound effect\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n\r\n\t\r\n});\r\n"]}